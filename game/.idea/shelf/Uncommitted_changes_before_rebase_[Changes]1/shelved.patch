Index: src/gui/GameMapGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>    package gui;\n\n    import cell.Cell;\n    import cell.box.BoxCell;\n    import cell.normalCell.NormalCell;\n    import entity.monster.Monster;\n    import entity.monster.monstertypes.GhostlyMonster;\n    import entity.monster.monstertypes.SpeedyMonster;\n    import entity.player.Player;\n    import gameengine.GameEngine;\n    import item.GameItem;\n    import item.bomb.Bomb;\n    import item.curse.Curse;\n    import item.powerup.PowerUp;\n    import util.ResourceCollection;\n\n    import javax.swing.*;\n    import java.awt.*;\n    import java.awt.event.ActionListener;\n    import java.awt.event.KeyAdapter;\n    import java.awt.event.KeyEvent;\n    import java.io.IOException;\n    import java.util.Random;\n    import java.util.concurrent.atomic.AtomicInteger;\n\n    import cell.wall.WallCell;\n\n    public class GameMapGUI extends JPanel {\n        private JFrame frame;\n        private GameEngine model;\n        public Image wallImage;\n        public Image walkableImage;\n        public Image boxImage;\n        private final GameTopPanelGUI topPanelGUI;\n        public Timer moveTimer;\n        private Timer timer;\n        public GameMapGUI( GameEngine model, JFrame frame, GameTopPanelGUI topPanelGUI) throws IOException {\n            this.model = model;\n            this.frame = frame;\n            this.topPanelGUI = topPanelGUI;\n            loadMapAssetsRandomly();\n\n            setupKeyListener();\n            updateGUI();\n            this.setFocusable(true);\n            this.frame.setLocationRelativeTo(null);\n\n            System.out.println(model.getPlayers());\n            int playerCount = model.getPlayers().size();\n            System.out.println(\"Player count: \" + playerCount);\n\n            int delay = 1000 / 24;\n            timer = new Timer(delay, e -> {\n                try {\n                    this.model.runGameUnit();\n                    this.topPanelGUI.updateTopPanel();\n                    long countDeadPlayers = model.getPlayers().stream().filter(Player::isDead).count();\n                    if (countDeadPlayers == model.getPlayers().size()) {\n                        timer.stop();\n                        SwingUtilities.invokeLater(this::showGameOverDialog);\n                    }\n                } catch (IOException ex) {\n                    throw new RuntimeException(ex);\n                }\n                this.repaint();\n            });\n\n            timer.start();\n        }\n\n        private void showGameOverDialog() {\n            topPanelGUI.timerObj.stop();\n            JDialog dialog = new JDialog(frame, \"Game over!\", true);\n            dialog.setLayout(new GridLayout(3, 1));\n            dialog.setSize(200, 300);\n            dialog.setLocationRelativeTo(frame);\n\n            JLabel label = new JLabel(\"Game over!\");\n            label.setHorizontalAlignment(SwingConstants.CENTER);\n            dialog.add(label);\n\n            JButton restart = new JButton(\"Restart\");\n            restart.addActionListener(e -> {\n                topPanelGUI.restartDialog(dialog);\n                dialog.dispose();\n                frame.dispose();\n            });\n            dialog.add(restart);\n\n            JButton menuButton = new JButton(\"Back to Menu\");\n            menuButton.addActionListener(e -> {\n                topPanelGUI.backToMenu(dialog);\n                dialog.dispose();\n                frame.getContentPane().removeAll();\n                frame.dispose();\n            });\n            dialog.add(menuButton);\n\n            dialog.setVisible(true);\n        }\n\n        private void loadMapAssetsRandomly() throws IOException {\n            Random random = new Random();\n\n            // Define arrays of possible asset paths for each type\n            Image[] wallPaths = {\n                    ResourceCollection.Images.WALLMAP1.getImage(),\n                    ResourceCollection.Images.WALLMAP2.getImage(),\n                    ResourceCollection.Images.WALLMAP3.getImage()\n            };\n\n            Image[] walkablePaths = {\n                    ResourceCollection.Images.GROUNDMAP1.getImage(),\n                   // ResourceCollection.Images.GROUNDMAP2.getImage(), // this image is not visually appealing\n                    ResourceCollection.Images.GROUNDMAP3.getImage()\n            };\n\n            Image[] boxPaths = {\n                    ResourceCollection.Images.BOXMAP1.getImage(),\n                    ResourceCollection.Images.BOXMAP2.getImage(),\n                    ResourceCollection.Images.BOXMAP3.getImage(),\n                    ResourceCollection.Images.PLACED_BOX.getImage()\n            };\n\n            // Randomly select an asset for each type\n            wallImage = wallPaths[random.nextInt(wallPaths.length)];\n            walkableImage = walkablePaths[random.nextInt(walkablePaths.length)];\n            boxImage = boxPaths[random.nextInt(boxPaths.length)];\n\n        }\n\n        private void updateGUI() {\n            initializeLevel();\n        }\n\n        public void initializeLevel(){\n\n            this.moveTimer = new Timer(300, e -> {\n                for(Monster ms : model.getMonsters()){\n                    ms.moveRandomly();\n                    for(Player p: model.getPlayers()){\n                        if(ms.isNextToPlayer(p.getX(), p.getY())){\n                            if(!p.isInvincible()){\n                                p.setDead(true);\n\n                            }\n                        }\n                    }\n                }\n                repaint();\n\n            });\n            moveTimer.start();\n        }\n\n\n        /**\n         * Sets up the key listener for the game.\n         */\n\n        // refactor paintcomponent pls\n        //TODO\n        @Override\n        protected void paintComponent(Graphics g) {\n            super.paintComponent(g);\n\n            Cell[][] mapCell = this.model.getMap().getMap();\n            int cellSize = 32;\n\n            for (int i = 0; i < mapCell.length; i++) {\n                for (int j = 0; j < mapCell[i].length; j++) {\n                    Cell cell = mapCell[i][j];\n                    if (cell instanceof NormalCell) {\n                        g.drawImage(walkableImage, j * cellSize, i * cellSize, cellSize, cellSize, this);\n                    } else if (cell instanceof WallCell) {\n                        g.drawImage(wallImage, j * cellSize, i * cellSize, cellSize, cellSize, this);\n                    } else if (cell instanceof BoxCell) {\n                        g.drawImage(boxImage, j * cellSize, i * cellSize, cellSize, cellSize, this);\n                    }\n                }\n            }\n\n            for (Monster monster : model.getMonsters()){\n                if (monster instanceof GhostlyMonster){\n                    g.drawImage(ResourceCollection.Images.GHOSTLY_MONSTER.getImage(), monster.getX() * cellSize, monster.getY() * cellSize, cellSize, cellSize, this);\n\n                }\n                else if(monster instanceof SpeedyMonster){\n                    g.drawImage(ResourceCollection.Images.SPEEDY_MONSTER.getImage(), monster.getX() * cellSize, monster.getY() * cellSize, cellSize, cellSize, this);\n\n                }\n                else{\n                    g.drawImage(ResourceCollection.Images.BASIC_MONSTER.getImage(), monster.getX() * cellSize, monster.getY() * cellSize, cellSize, cellSize, this);\n\n                }\n            }\n\n\n            // Draw players\n            for (Player player : model.getPlayers()){\n                if (!player.isDead()) {\n                    Graphics2D g2d = (Graphics2D) g;\n                    if (player.isGhost()) {\n                        float alpha = 0.5f;\n                        g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alpha));\n                    } else {\n                        g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1.0f));\n                    }\n\n                    g2d.drawImage(player.getImage(), player.getX() * cellSize, player.getY() * cellSize, cellSize, cellSize, this);\n                    g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1.0f));\n                }\n            }\n\n            // Draw bombs\n            for(int i = 0; i < this.model.getMap().getMap().length; i++){\n                for (int j = 0; j < this.model.getMap().getMap()[0].length; j++) {\n                    if (!this.model.getMap().getMap()[i][j].getItems().isEmpty()) {\n                        for (GameItem item : this.model.getMap().getMap()[i][j].getItems()) {\n                            if (item instanceof Bomb) {\n                                g.drawImage(item.getImage(), j * cellSize, i * cellSize, cellSize, cellSize, this);\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Draw foregrownd\n            for (int i = 0; i < this.model.getMap().getMap().length; i++) {\n                for (int j = 0; j < this.model.getMap().getMap()[0].length; j++) {\n                    if (this.model.getMap().getMap()[i][j].getForegroundImage() != null) {\n                        g.drawImage(this.model.getMap().getMap()[i][j].getForegroundImage(), j * cellSize, i * cellSize, cellSize, cellSize, this);\n                    }\n                }\n            }\n\n            //draw curses\n            for (int i = 0; i < this.model.getMap().getMap().length; i++) {\n                for (int j = 0; j < this.model.getMap().getMap()[0].length; j++) {\n                    Cell cell = this.model.getMap().getMap()[i][j];\n                    if (cell instanceof NormalCell) {\n                        NormalCell normalCell = (NormalCell) cell;\n                        int finalJ = j;\n                        int finalI = i;\n                        normalCell.getItems().forEach(item -> {\n                            if (item instanceof Curse) {\n                                // specific curse icons for debugging\n                               // g.drawImage(item.getImage(), finalJ * cellSize, finalI * cellSize, cellSize, cellSize, this);\n                                g.drawImage(ResourceCollection.Images.CURSE_ICON.getImage(), finalJ * cellSize, finalI * cellSize, cellSize, cellSize, this);\n                            }\n                        });\n                    }\n                }\n            }\n\n            // draw powerups\n            for (int i = 0; i < this.model.getMap().getMap().length; i++) {\n                for (int j = 0; j < this.model.getMap().getMap()[0].length; j++) {\n                    Cell cell = this.model.getMap().getMap()[i][j];\n                    if (cell instanceof NormalCell) {\n                        NormalCell normalCell = (NormalCell) cell;\n                        int finalJ = j;\n                        int finalI = i;\n                        normalCell.getItems().forEach(item -> {\n                            if (item instanceof PowerUp) {\n                                // image should be changed to baseImage for production\n                                g.drawImage(item.getImage(), finalJ * cellSize, finalI * cellSize, cellSize, cellSize, this);\n                            }\n                        });\n                    }\n                }\n            }\n        }\n\n\n\n        private void setupKeyListener() {\n            this.addKeyListener(new KeyAdapter() {\n\n                @Override\n                public void keyPressed(KeyEvent e) {\n                    //System.out.println(\"Key pressed: \" + e.getKeyCode()); // Debugging\n                    try {\n                        switch (e.getKeyCode()) {\n                            case KeyEvent.VK_W: // W key\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"87\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_S: // S key\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"83\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_A: // A key\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"65\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_D: // D key\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"68\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_UP: // Up arrow key\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"38\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_DOWN: // Down arrow key\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"40\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_LEFT: // Left arrow key\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"37\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_RIGHT: // Right arrow key\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"39\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_B: // B key for Player 1 action\n\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"66\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_ENTER: // Enter (Return) key for Player 2 action\n\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"10\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_I: // I key\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"73\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_J: // J key\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"74\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_K: // K key\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"75\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_L: // L key\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"76\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_SPACE: // Spacebar for placing bomb\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"32\", model.getMap().getMap());\n                                }\n                                break;\n                            // box\n                            case KeyEvent.VK_Q: // Q key\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"81\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_O:\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"79\", model.getMap().getMap());\n                                }\n                                break;\n                            case KeyEvent.VK_CLOSE_BRACKET:\n                                for (Player player : model.getPlayers()) {\n                                    player.HandleAction(\"93\", model.getMap().getMap());\n                                }\n                                break;\n\n                            case KeyEvent.VK_ESCAPE: // Escape key\n                                frame.dispose();\n                                break;\n                        }\n                    } catch (IOException ex) {\n                        throw new RuntimeException(ex);\n                    }\n\n                    repaint();\n                }\n            });\n            frame.setVisible(true);\n            SwingUtilities.invokeLater(() -> this.requestFocusInWindow());\n        }\n    }\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/gui/GameMapGUI.java b/src/gui/GameMapGUI.java
--- a/src/gui/GameMapGUI.java	(revision 6ee9ded34ff6ee619ad979cd8bd15c81b4152203)
+++ b/src/gui/GameMapGUI.java	(date 1713808362757)
@@ -34,6 +34,7 @@
         private final GameTopPanelGUI topPanelGUI;
         public Timer moveTimer;
         private Timer timer;
+
         public GameMapGUI( GameEngine model, JFrame frame, GameTopPanelGUI topPanelGUI) throws IOException {
             this.model = model;
             this.frame = frame;
@@ -55,7 +56,7 @@
                     this.model.runGameUnit();
                     this.topPanelGUI.updateTopPanel();
                     long countDeadPlayers = model.getPlayers().stream().filter(Player::isDead).count();
-                    if (countDeadPlayers == model.getPlayers().size()) {
+                    if (countDeadPlayers == model.getPlayers().size() - 1) {
                         timer.stop();
                         SwingUtilities.invokeLater(this::showGameOverDialog);
                     }
@@ -75,9 +76,15 @@
             dialog.setSize(200, 300);
             dialog.setLocationRelativeTo(frame);
 
-            JLabel label = new JLabel("Game over!");
-            label.setHorizontalAlignment(SwingConstants.CENTER);
-            dialog.add(label);
+            for(Player player : model.getPlayers()){
+                if(!player.isDead()){
+                    player.victoryCount++;
+                    topPanelGUI.updateTopPanel();
+                    JLabel label = new JLabel("Player " + player.getName() + " won this round!");
+                    label.setHorizontalAlignment(SwingConstants.CENTER);
+                    dialog.add(label);
+                }
+            }
 
             JButton restart = new JButton("Restart");
             restart.addActionListener(e -> {
@@ -135,22 +142,22 @@
 
         public void initializeLevel(){
 
-            this.moveTimer = new Timer(300, e -> {
-                for(Monster ms : model.getMonsters()){
-                    ms.moveRandomly();
-                    for(Player p: model.getPlayers()){
-                        if(ms.isNextToPlayer(p.getX(), p.getY())){
-                            if(!p.isInvincible()){
-                                p.setDead(true);
+//            this.moveTimer = new Timer(300, e -> {
+//                for(Monster ms : model.getMonsters()){
+//                    ms.moveRandomly();
+//                    for(Player p: model.getPlayers()){
+//                        if(ms.isNextToPlayer(p.getX(), p.getY())){
+//                            if(!p.isInvincible()){
+//                                p.setDead(true);
+//
+//                            }
+//                        }
+//                    }
+//                }
+//                repaint();
 
-                            }
-                        }
-                    }
-                }
-                repaint();
-
-            });
-            moveTimer.start();
+           // });
+           // moveTimer.start();
         }
 
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"85837388-d273-450b-890f-047dd5729de4\" name=\"Changes\" comment=\"NEW dead image for top pnel\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/gui/GameMapGUI.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/gui/GameMapGUI.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/gui/GameTopPanelGUI.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/gui/GameTopPanelGUI.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$/..\" value=\"topPanelIssues\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 0\n}</component>\n  <component name=\"ProjectId\" id=\"2dYVJ1NUAl2QSM9oAhwM1m6NI9z\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Unnamed.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;endGame&quot;,\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\n    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;openjdk-22&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;G:/boombastic/game/src/assets/icons&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;onboarding.tips.debug.path&quot;: &quot;G:/soft-tech/boombastic/game/gameModule/src/Main.java&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Artifacts&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.projectsettings.compiler.javacompiler&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"G:\\boombastic\\game\\src\\assets\\icons\" />\n      <recent name=\"G:\\boombastic\\game\\src\\entity\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Application.Main\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" singleton=\"false\">\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"graalvm-ce-22\" />\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"game\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Unnamed\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"BUNDLED\" />\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"game\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <list>\n      <item itemvalue=\"Application.Main\" />\n      <item itemvalue=\"Application.Unnamed\" />\n    </list>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\n        <option value=\"jdk-22-openjdk-22-4caba194b151-f504ca98\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"85837388-d273-450b-890f-047dd5729de4\" name=\"Changes\" comment=\"\" />\n      <created>1710185004978</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1710185004978</updated>\n      <workItem from=\"1710185006035\" duration=\"2873000\" />\n      <workItem from=\"1712772296831\" duration=\"704000\" />\n      <workItem from=\"1712820223602\" duration=\"2463000\" />\n      <workItem from=\"1713165836496\" duration=\"5723000\" />\n      <workItem from=\"1713171978787\" duration=\"325000\" />\n      <workItem from=\"1713213474912\" duration=\"348000\" />\n      <workItem from=\"1713214868959\" duration=\"59000\" />\n      <workItem from=\"1713216238138\" duration=\"1342000\" />\n      <workItem from=\"1713260467846\" duration=\"3824000\" />\n      <workItem from=\"1713788696944\" duration=\"411000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"clean project created\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710185096556</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710185096556</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"folder structure for power up, curse ,cell, entity added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710186653117</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710186653117</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"basic power up drop after box destruction added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713263088807</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713263088807</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"game engine and bomb code cleaned up\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713263650958</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713263650958</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Logic improved for setting, collecting items ingame. (Combined curse and powerup logic). Added LowSpeed and BombBlastReduction curses!\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713350312430</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713350312430</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"wrong monster image fixed\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713384763277</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713384763277</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Removed a walkable tile from walkablepaths, because it was not visually appealing.&#10;&#10;Added a new Box asset to boxPaths.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713385755905</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713385755905</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\".\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713385861222</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713385861222</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Removed a walkable tile from walkablepaths, because it was not visually appealing.&#10;&#10;Added a new Box asset to boxPaths.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713385905659</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713385905659</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"NEW dead image for top pnel\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713387039974</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713387039974</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"11\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"clean project created\" />\n    <MESSAGE value=\"folder structure for power up, curse ,cell, entity added\" />\n    <MESSAGE value=\"changes\" />\n    <MESSAGE value=\"basic power up drop after box destruction added\" />\n    <MESSAGE value=\"game engine and bomb code cleaned up\" />\n    <MESSAGE value=\"Logic improved for setting, collecting items ingame. (Combined curse and powerup logic). Added LowSpeed and BombBlastReduction curses!\" />\n    <MESSAGE value=\"wrong monster image fixed\" />\n    <MESSAGE value=\".\" />\n    <MESSAGE value=\"Removed a walkable tile from walkablepaths, because it was not visually appealing.&#10;&#10;Added a new Box asset to boxPaths.\" />\n    <MESSAGE value=\"NEW dead image for top pnel\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"NEW dead image for top pnel\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/item/bomb/Bomb.java</url>\n          <line>22</line>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/gameModule/src/Main.java</url>\n          <line>11</line>\n          <option name=\"timeStamp\" value=\"2\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6ee9ded34ff6ee619ad979cd8bd15c81b4152203)
+++ b/.idea/workspace.xml	(date 1713793516943)
@@ -7,7 +7,6 @@
     <list default="true" id="85837388-d273-450b-890f-047dd5729de4" name="Changes" comment="NEW dead image for top pnel">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/gui/GameMapGUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/gui/GameMapGUI.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/gui/GameTopPanelGUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/gui/GameTopPanelGUI.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
